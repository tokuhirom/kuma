#!/usr/bin/env node
"use strict";

var Translator = require("./src/translator.js").Kuma.Translator,
    Parser = require("./src/parser.js").Kuma.Parser,
    Scanner = require("./src/parser.js").Kuma.Scanner,
    Core = require("./src/runtime.js").Kuma.Core,
    fs = require('fs'),
    readline = require('readline'),
    Kuma = {
        "Core": Core
    };
var argv = require('optimist')
    .usage('Usage: $0 -e eval')
    .argv;

if (argv.e) {
    // -e  means eval mode
    var src = '' + argv.e;
    evaluate(src);
} else if (argv._.length > 0) {
    var fname = argv._[0];
    var src = fs.readFileSync(fname, 'utf-8');
    evaluate(src);
} else {
    // TODO: readline?
    var rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
    });

    rl.setPrompt('kuma~> ');
    rl.prompt();
    rl.on('line', function(src) {
        try {
            console.log(evaluate(''+src.trim()));
        } catch (e) { console.log(e); }
        rl.prompt();
    }).on('close', function () {
        process.exit(0);
    });
}

function evaluate(src) {
    var parser = new Parser(src);
    var ast = parser.parse();
    if (argv.dump_ast) {
        console.log(JSON.stringify(ast));
    }
    var translator = new Translator();
    var js = translator.translate(ast);
    if (argv.dump_js) {
        console.log(js);
    }
    return eval(js);
}

